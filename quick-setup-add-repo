
to clone a project:
  on locat terminal run: git clone https://github.com/...
  The url is from github website, "clone or download with https" -> copy to clipboard

==

create a new repository on the command line

echo "blar..." >> README.md

git init
git add * (all files under current dir)
git status -s (check status)
git commit -m "first commit"
git remote add origin git@github.com:dhugit/python-code.git
git push -u origin master

or push an existing repo from command line
git remote add origin git@github.com:dhugit/python-code.git
git push -u origin master


[ at github web site, add repo named github-related ]
   ==
   password for 'https://dhugit@github.com': 
   remote: Repository not found.
   fatal: repository 'https://dhugit@github.com/dhugit/github-related.git/' not found
   ==
git remote add origin https://dhugit@github.com/dhugit/github-related.git
git push -u origin master
   
   


==

in the case local repo was cloned from github, to enable push update url with command

"git remote set-url origin https://dhugit@github.com/dhugit/repo-name-here.git"
or edit ".git/config" and update the url

==

update a file:
when you change a file which is already in the repository, 
you have to git add it again if you want it to be staged. 
Hope it helps. You have to use git add to stage them, 
or they won't commit. ... So when you git commit , t
hose changes won't be added since they are not staged.

   edit files, check with "git status -s"
   git add "files changed"
   git commit -m "update"
   git push -u origin master
   
   [donghu@fedora bash]$ git status -s
 M getopt
[donghu@fedora bash]$ git commit -m "upd"
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
	modified:   getopt

no changes added to commit
[donghu@fedora bash]$ git add getopt
[donghu@fedora bash]$ git status -s
M  getopt
[donghu@fedora bash]$ git commit -m "upd"
[master 6fbaf4f] upd
 1 file changed, 2 insertions(+)
[donghu@fedora bash]$ git push -u origin master
Password for 'https://dhugit@github.com': 
Counting objects: 3, done.
Delta compression using up to 8 threads.
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 298 bytes | 298.00 KiB/s, done.
Total 3 (delta 1), reused 0 (delta 0)
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/dhugit/bash.git
   d243cdf..6fbaf4f  master -> master
Branch 'master' set up to track remote branch 'master' from 'origin'.
[donghu@fedora bash]$ 

====================   ssh   ========
Create a new repository, or reuse an existing one.

Generate a new SSH key:

ssh-keygen -t rsa -C "your_email@example.com"
Copy the contents of the file ~/.ssh/id_rsa.pub to your SSH keys in your GitHub account settings.

Test SSH key:

$ ssh -T git@github.com
Hi developius! You've successfully authenticated, but GitHub does not provide shell access.
Change directory into the local clone of your repository (if you're not already there) and run:

git remote set-url origin git@github.com:username/your-repository.git
Now try editing a file (try the README) and then do:

$ git commit -am "Update README.md"
$ git push
You should not be asked for a username or password. If it works, your SSH key is correctly configured.


===
GitHub uses your commit email address to associate commits with your GitHub account. You can choose the email address that will be associated with the commits you push from the command line as well as web-based Git operations you make.

For web-based Git operations, you can set your commit email address on GitHub. For commits you push from the command line, you can set your commit email address in Git.

Any commits you made prior to changing your commit email address are still associated with your previous email address.

Note: You cannot verify email addresses from disposable domains. If you'd like to keep your email address private, you can use a GitHub-provided noreply email address. For more information, see "Setting your commit email address on GitHub."

. on linux command line, check setting:

	[dhu@mythtv2 github-related]$ git config --list
			git config --global user.email "dhugit@users.noreply.github.com"  # add email address
			git config --global user.email  # check

. file updated: : ~/.gitconfig


